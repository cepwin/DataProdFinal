Explore the Data Set
========================================================
author: Wendy Sarrett 
date:  February 20, 2017
autosize: true
transition: rotate
transition-speed: slow
font-family: 'Times New Roman'
width: 1440
height: 1200


What is "Explore the Data Set"
========================================================
The purpose of <em>Explore the Data Set</em> is to allow one to see
a basic analysis on the basic datasets included in rStudio that meet the
following criteria:
- The data set is a dataframe or a timeseries
- The data set has at least 4 columns

With these datasets you can quickly and easily see how the columns are related
and after selecting four columns (your x, y z and color) you can see a plot_ly 
graph that allows you to visualize the relationships


How the List of data sets is obtained
========================================================
<small>The trickiest thing about this app is getting the list of datasets:</small>

```{r, error=FALSE, warning=FALSE, size="small"}
  #Only data of the type data.frame or >= 4 columns
  getDataSets<-function() {
    ds<-data(package="datasets")
    res<-ds$results
    dsNames<-res[,3]
    choise<-c()
    dataLst<-list()
    for(i in 1:length(dsNames)) {
      wd<-strsplit(dsNames[[i]]," ")[[1]]
      dsNames[[i]]<-wd[1]
      assign("xo", get(wd[1]))
      if("data.frame" %in% class(xo)){
        if(ncol(xo) >= 4) {
          choise<-c(choise,wd[1])
          dataLst[[wd[1]]]<-xo
        }
      } else {
        if("ts" %in% class(xo)){
          xoDF <- as.data.frame(xo)
          if(ncol(xoDF) >= 4) {
            choise<-c(choise,wd[1])
            dataLst[[wd[1]]]<-xoDF
          }
        }
      }
    }    
    ## note: commented out ui element update for this demo
    dataLst
  }
  
```
The Server Calculation
========================================================
```{r echo=TRUE, eval=FALSE}
   ##Reactive method takes selected dataset and calculates the lm 
  ## which is then displayed.
   plotdata<- reactive({
     shinyjs::hideElement("pPlot")
     datasel <- input$visData
     data2<-dataLst[[datasel]]
    if(class(data2) == "data.frame") {
      newdata<-data2
     } else {
     newdata<-as.data.frame(data2)
    }
    choise<-names(newdata)
    updateSelectInput(session, "colA",
                      choices = choise)
    updateSelectInput(session, "colB",
                      choices = choise)
    updateSelectInput(session, "colC",
                      choices = choise)
    updateSelectInput(session, "colD",
                      choices = choise)
    ##Avoiding issue with y = factor variable
    col<-0
    for(i in 1:ncol(newdata)) {
      if(!is.factor(newdata[,i]) && col == 0) {
        col<-i
      }
        
    }
    if(col > 0) {
    x<-summary(lm(newdata[,col] ~., data = newdata))
    } else {
      x<- "no non-factor columns .... lm is not valid"
    }
     x
   })
   ##End of reactive method
```

Executing the Server Calculation
========================================================
The main server calculation for a dataset would look as follows if mtcars was selected. Note for the purposes of display well set newdata = mtcars and col = 1:
```{r, echo=FALSE }
    newdata<-mtcars
    col<-1
```

```{r, echo=TRUE, warning = FALSE}
   x<-summary(lm(newdata[,col] ~., data = newdata))
   x
```

Benefits and Possible Enhancements "Exploring the Data Set"
========================================================


The benefits of this application are the following:

- Allows one to quickly get a sense of how the data is related by calculating a linear model
- When a Dataset is selected a reactive method calculates the limear model and fills the column
lists based of the data set selected
- Allows one to quickly get a sense of what the data looks like by using a 3-d plot-ly plot

Current Limitations

-  Set number of columns for graph
-  Only one type of graph
There are enhancements that might be done to improve this

- Allow options of other calculations such as predictive functions (ie. machine learning)
- Expand the number of datasets available
- Allow a dataset to be loaded from a URL

